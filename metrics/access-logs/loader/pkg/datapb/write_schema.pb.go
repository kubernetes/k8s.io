// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: pkg/datapb/write_schema.proto

package datapb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RawGCSRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestTime     int64               `protobuf:"varint,1,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	CIp             string              `protobuf:"bytes,2,opt,name=c_ip,json=cIp,proto3" json:"c_ip,omitempty"`
	CIpType         int32               `protobuf:"varint,3,opt,name=c_ip_type,json=cIpType,proto3" json:"c_ip_type,omitempty"`
	CIpRegion       string              `protobuf:"bytes,4,opt,name=c_ip_region,json=cIpRegion,proto3" json:"c_ip_region,omitempty"`
	CsMethod        string              `protobuf:"bytes,5,opt,name=cs_method,json=csMethod,proto3" json:"cs_method,omitempty"`
	CsUri           string              `protobuf:"bytes,6,opt,name=cs_uri,json=csUri,proto3" json:"cs_uri,omitempty"`
	ScStatus        int32               `protobuf:"varint,7,opt,name=sc_status,json=scStatus,proto3" json:"sc_status,omitempty"`
	CsBytes         int64               `protobuf:"varint,8,opt,name=cs_bytes,json=csBytes,proto3" json:"cs_bytes,omitempty"`
	ScBytes         int64               `protobuf:"varint,9,opt,name=sc_bytes,json=scBytes,proto3" json:"sc_bytes,omitempty"`
	TimeTakenMicros int64               `protobuf:"varint,10,opt,name=time_taken_micros,json=timeTakenMicros,proto3" json:"time_taken_micros,omitempty"`
	CsHost          string              `protobuf:"bytes,11,opt,name=cs_host,json=csHost,proto3" json:"cs_host,omitempty"`
	CsReferer       string              `protobuf:"bytes,12,opt,name=cs_referer,json=csReferer,proto3" json:"cs_referer,omitempty"`
	CsUserAgent     string              `protobuf:"bytes,13,opt,name=cs_user_agent,json=csUserAgent,proto3" json:"cs_user_agent,omitempty"`
	SRequestId      string              `protobuf:"bytes,14,opt,name=s_request_id,json=sRequestId,proto3" json:"s_request_id,omitempty"`
	CsOperation     string              `protobuf:"bytes,15,opt,name=cs_operation,json=csOperation,proto3" json:"cs_operation,omitempty"`
	CsBucket        string              `protobuf:"bytes,16,opt,name=cs_bucket,json=csBucket,proto3" json:"cs_bucket,omitempty"`
	CsObject        string              `protobuf:"bytes,17,opt,name=cs_object,json=csObject,proto3" json:"cs_object,omitempty"`
	CidrInfo        *RawGCSRow_CIDRInfo `protobuf:"bytes,18,opt,name=cidr_info,json=cidrInfo,proto3" json:"cidr_info,omitempty"`
}

func (x *RawGCSRow) Reset() {
	*x = RawGCSRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_datapb_write_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawGCSRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawGCSRow) ProtoMessage() {}

func (x *RawGCSRow) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_datapb_write_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawGCSRow.ProtoReflect.Descriptor instead.
func (*RawGCSRow) Descriptor() ([]byte, []int) {
	return file_pkg_datapb_write_schema_proto_rawDescGZIP(), []int{0}
}

func (x *RawGCSRow) GetRequestTime() int64 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

func (x *RawGCSRow) GetCIp() string {
	if x != nil {
		return x.CIp
	}
	return ""
}

func (x *RawGCSRow) GetCIpType() int32 {
	if x != nil {
		return x.CIpType
	}
	return 0
}

func (x *RawGCSRow) GetCIpRegion() string {
	if x != nil {
		return x.CIpRegion
	}
	return ""
}

func (x *RawGCSRow) GetCsMethod() string {
	if x != nil {
		return x.CsMethod
	}
	return ""
}

func (x *RawGCSRow) GetCsUri() string {
	if x != nil {
		return x.CsUri
	}
	return ""
}

func (x *RawGCSRow) GetScStatus() int32 {
	if x != nil {
		return x.ScStatus
	}
	return 0
}

func (x *RawGCSRow) GetCsBytes() int64 {
	if x != nil {
		return x.CsBytes
	}
	return 0
}

func (x *RawGCSRow) GetScBytes() int64 {
	if x != nil {
		return x.ScBytes
	}
	return 0
}

func (x *RawGCSRow) GetTimeTakenMicros() int64 {
	if x != nil {
		return x.TimeTakenMicros
	}
	return 0
}

func (x *RawGCSRow) GetCsHost() string {
	if x != nil {
		return x.CsHost
	}
	return ""
}

func (x *RawGCSRow) GetCsReferer() string {
	if x != nil {
		return x.CsReferer
	}
	return ""
}

func (x *RawGCSRow) GetCsUserAgent() string {
	if x != nil {
		return x.CsUserAgent
	}
	return ""
}

func (x *RawGCSRow) GetSRequestId() string {
	if x != nil {
		return x.SRequestId
	}
	return ""
}

func (x *RawGCSRow) GetCsOperation() string {
	if x != nil {
		return x.CsOperation
	}
	return ""
}

func (x *RawGCSRow) GetCsBucket() string {
	if x != nil {
		return x.CsBucket
	}
	return ""
}

func (x *RawGCSRow) GetCsObject() string {
	if x != nil {
		return x.CsObject
	}
	return ""
}

func (x *RawGCSRow) GetCidrInfo() *RawGCSRow_CIDRInfo {
	if x != nil {
		return x.CidrInfo
	}
	return nil
}

// Messages to load into bigquery must be self-contained
type RawGCSRow_CIDRInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity                string `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
	Service               string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Region                string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	AwsNetworkBorderGroup string `protobuf:"bytes,5,opt,name=aws_network_border_group,json=awsNetworkBorderGroup,proto3" json:"aws_network_border_group,omitempty"`
}

func (x *RawGCSRow_CIDRInfo) Reset() {
	*x = RawGCSRow_CIDRInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_datapb_write_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawGCSRow_CIDRInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawGCSRow_CIDRInfo) ProtoMessage() {}

func (x *RawGCSRow_CIDRInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_datapb_write_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawGCSRow_CIDRInfo.ProtoReflect.Descriptor instead.
func (*RawGCSRow_CIDRInfo) Descriptor() ([]byte, []int) {
	return file_pkg_datapb_write_schema_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RawGCSRow_CIDRInfo) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *RawGCSRow_CIDRInfo) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *RawGCSRow_CIDRInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RawGCSRow_CIDRInfo) GetAwsNetworkBorderGroup() string {
	if x != nil {
		return x.AwsNetworkBorderGroup
	}
	return ""
}

var File_pkg_datapb_write_schema_proto protoreflect.FileDescriptor

var file_pkg_datapb_write_schema_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x62, 0x2f, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x70, 0x62, 0x22, 0xd4, 0x05, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x47,
	0x43, 0x53, 0x52, 0x6f, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x04, 0x63, 0x5f, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x09, 0x63,
	0x5f, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x49, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x5f, 0x69, 0x70, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x49,
	0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x73, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x73, 0x55, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x73, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x73, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x61, 0x6b, 0x65, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x73,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x73, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x73, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x73, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x69, 0x64, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x62, 0x2e, 0x52, 0x61, 0x77, 0x47, 0x43, 0x53, 0x52, 0x6f, 0x77, 0x2e, 0x43, 0x49, 0x44, 0x52,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x69, 0x64, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x8d,
	0x01, 0x0a, 0x08, 0x43, 0x49, 0x44, 0x52, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x77, 0x73, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x77, 0x73, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x35,
	0x5a, 0x33, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x6c,
	0x6f, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_datapb_write_schema_proto_rawDescOnce sync.Once
	file_pkg_datapb_write_schema_proto_rawDescData = file_pkg_datapb_write_schema_proto_rawDesc
)

func file_pkg_datapb_write_schema_proto_rawDescGZIP() []byte {
	file_pkg_datapb_write_schema_proto_rawDescOnce.Do(func() {
		file_pkg_datapb_write_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_datapb_write_schema_proto_rawDescData)
	})
	return file_pkg_datapb_write_schema_proto_rawDescData
}

var file_pkg_datapb_write_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_datapb_write_schema_proto_goTypes = []interface{}{
	(*RawGCSRow)(nil),          // 0: datapb.RawGCSRow
	(*RawGCSRow_CIDRInfo)(nil), // 1: datapb.RawGCSRow.CIDRInfo
}
var file_pkg_datapb_write_schema_proto_depIdxs = []int32{
	1, // 0: datapb.RawGCSRow.cidr_info:type_name -> datapb.RawGCSRow.CIDRInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_datapb_write_schema_proto_init() }
func file_pkg_datapb_write_schema_proto_init() {
	if File_pkg_datapb_write_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_datapb_write_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawGCSRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_datapb_write_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawGCSRow_CIDRInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_datapb_write_schema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_datapb_write_schema_proto_goTypes,
		DependencyIndexes: file_pkg_datapb_write_schema_proto_depIdxs,
		MessageInfos:      file_pkg_datapb_write_schema_proto_msgTypes,
	}.Build()
	File_pkg_datapb_write_schema_proto = out.File
	file_pkg_datapb_write_schema_proto_rawDesc = nil
	file_pkg_datapb_write_schema_proto_goTypes = nil
	file_pkg_datapb_write_schema_proto_depIdxs = nil
}
