# Copyright 2023 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: main
  namespace: monitoring
  labels:
    alertmanager: main
spec:
  route:
    receiver: 'kubermatic'

    # How long to initially wait to send a notification for a group
    # of alerts. Allows to wait for an inhibiting alert to arrive or collect
    # more initial alerts for the same group.
    groupWait: 30s

    # How long to wait before sending a notification about new alerts that
    # are added to a group of alerts for which an initial notification has
    # already been sent.
    groupInterval: 5m

    # How long to wait before sending a notification again if it has already
    # been sent successfully for an alert.
    repeatInterval: 24h

    # Default group criteria. This might need some refactor if we add more
    # alerting rules.
    groupBy: ['alertname', 'node']
  receivers:
  - name: 'kubermatic'
    slackConfigs:
    - apiURL:
        name: alertmanager-k8c-slack-token
        key: url
      channel: '#alerting-cncf-prod'
      sendResolved: true
      title: ":warning: {{ .CommonLabels.alertname }}"
      text: "{{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}"
